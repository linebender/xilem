[package]
name = "masonry_winit"
version.workspace = true # We mimic Xilem's version
description = "Data-oriented Rust UI design toolkit."
keywords = ["gui", "ui", "toolkit"]
categories = ["gui", "internationalization", "accessibility"]
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true

[package.metadata.docs.rs]
all-features = true
# There are no platform specific docs.
default-target = "x86_64-unknown-linux-gnu"
targets = []
# rustdoc-scrape-examples tracking issue https://github.com/rust-lang/rust/issues/88791
cargo-args = ["-Zunstable-options", "-Zrustdoc-scrape-examples"]

[features]
default = []
# Enables tracing using tracy if the default Masonry tracing is used.
# https://github.com/wolfpld/tracy can be connected to when this feature is enabled.
tracy = ["dep:tracing-tracy", "dep:wgpu-profiler", "wgpu-profiler/tracy", "masonry/tracy"]

[dependencies]
masonry.workspace = true
wgpu.workspace = true
winit.workspace = true
tracing = { workspace = true, features = ["default"] }
tracing-tracy = { version = "0.11.4", optional = true }
ui-events-winit.workspace = true
pollster = "0.4.0"
accesskit_winit.workspace = true
wgpu-profiler = { optional = true, version = "0.22.0", default-features = false }

[target.'cfg(target_arch = "wasm32")'.dependencies]
web-time.workspace = true

[dev-dependencies]
image = { workspace = true, features = ["png"] }
masonry = { workspace = true, features = ["testing"] }

# Make wgpu use tracing for its spans.
profiling = { version = "1.0.16", features = ["profile-with-tracing"] }

[lints]
workspace = true

[[example]]
name = "calc_masonry"
# This actually enables scraping for all examples, not just this one.
# However it is possible to set doc-scrape-examples to false for other specific examples.
doc-scrape-examples = true
