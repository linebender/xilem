on:
  push:
    branches:
      - master
  pull_request:

env:
  SKIP_RENDER_SNAPSHOTS: 1

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    name: cargo fmt
    steps:
      - uses: actions/checkout@v2

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
          override: true

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test-stable:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]
    name: cargo clippy+test
    steps:
      - uses: actions/checkout@v2

      - name: install libx11-dev
        run: |
          sudo apt update
          sudo apt install libx11-dev libpango1.0-dev libxkbcommon-dev libxkbcommon-x11-dev
        if: contains(matrix.os, 'ubuntu')

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          profile: minimal
          override: true

      - name: restore cache
        uses: Swatinem/rust-cache@v2

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --no-default-features

      # We use --all-targets to skip doc tests; we run them in a parallel task
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-targets --no-default-features

  doctest-stable:
    runs-on: macOS-latest
    name: doctests
    steps:
      - uses: actions/checkout@v2

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: restore cache
        uses: Swatinem/rust-cache@v2

      - name: cargo test --doc
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc --no-default-features

  # This tests the future rust compiler to catch errors ahead of time without
  # breaking CI
  # We only run on a single OS to save time; this might let some errors go
  # undetected until the compiler updates and they break CI; but that should
  # happen rarely, and not pose too much of a problem when it does.
  test-beta:
    runs-on: macOS-latest
    name: cargo clippy+check beta
    steps:
      - uses: actions/checkout@v2

      - name: install beta toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: beta
          components: clippy
          profile: minimal
          override: true

      - name: restore cache
        uses: Swatinem/rust-cache@v2

      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --no-default-features
        continue-on-error: true

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --no-default-features
        continue-on-error: true
