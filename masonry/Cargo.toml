[package]
name = "masonry"
version.workspace = true # We mimic Xilem's version
description = "Traits and types of the Masonry toolkit."
keywords = ["gui", "ui", "toolkit"]
categories = ["gui", "internationalization", "accessibility"]
edition.workspace = true
rust-version.workspace = true
license.workspace = true
repository.workspace = true

[package.metadata.docs.rs]
all-features = true
# There are no platform specific docs.
default-target = "x86_64-unknown-linux-gnu"
targets = []

# This makes the examples discoverable to (e.g.) Android GPU inspector without needing to provide the full name manually.
# Do not use when releasing a production app.
[package.metadata.android.application]
debuggable = true

[[example]]
name = "virtual_stresstest"
# This actually enables scraping for all examples, not just this one.
# However it is possible to set doc-scrape-examples to false for other specific examples.
doc-scrape-examples = true

# Also add to ANDROID_TARGETS in .github/ci.yml if adding a new Android example
[[example]]
# A custom example target which uses the same `mason.rs` file but for android
name = "virtual_stresstest_android"
path = "examples/virtual_stresstest.rs"
# cdylib is required for cargo-apk
crate-type = ["cdylib"]

[features]
default = []
# Enables tracing using tracy if the default Masonry tracing is used.
# https://github.com/wolfpld/tracy can be connected to when this feature is enabled.
tracy = ["dep:tracing-tracy", "tracing-tracy/enable", "vello/wgpu-profiler"]

[dependencies]
vello.workspace = true
wgpu.workspace = true
parley.workspace = true
tree_arena.workspace = true
ui-events.workspace = true
smallvec.workspace = true
tracing = { workspace = true, features = ["default"] }
image.workspace = true
futures-intrusive = "0.5.0"
pollster = "0.4.0"
tracing-subscriber = { version = "0.3.19", features = ["env-filter", "time"] }
tracing-tracy = { version = "0.11.4", optional = true }
accesskit.workspace = true
time = { workspace = true, features = ["macros", "formatting"] }
cursor-icon = "1.1.0"
dpi.workspace = true
anymap3 = "1.0.1"
oxipng = { version = "9.1.5", default-features = false }

[target.'cfg(target_arch = "wasm32")'.dependencies]
web-time.workspace = true

[target.'cfg(target_os = "android")'.dev-dependencies]
winit = { features = ["android-native-activity"], workspace = true }

[dev-dependencies]
float-cmp = { version = "0.10.0", features = ["std"], default-features = false }
image = { workspace = true, features = ["png"] }
insta = { version = "1.43.1" }
assert_matches = "1.5.0"

# Make wgpu use tracing for its spans.
profiling = { version = "1.0.16", features = ["profile-with-tracing"] }

[target.'cfg(target_os = "android")'.dependencies]
tracing_android_trace = "0.1.1"

[lints]
workspace = true
